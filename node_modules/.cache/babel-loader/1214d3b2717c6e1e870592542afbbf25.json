{"ast":null,"code":"var _jsxFileName = \"/home/spandan/projects-practice/calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport PressKey from './components/PressKey';\nimport DisplayScreen from './components/DisplayScreen';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.changeResult = keyValue => {\n      if (keyValue === 'AC') {} else {\n        let tempResult = [...this.state.result, keyValue];\n        this.setState({\n          result: tempResult\n        });\n      }\n    };\n\n    this.state = {\n      result: ['0']\n    };\n  }\n\n  render() {\n    const displayLetters = ['(', ')', '%', 'AC', '7', '8', '9', '/', '4', '5', '6', '*', '1', '2', '3', '-', '0', '.', '=', '+'];\n    const pressKeyItems = displayLetters.map(displayLetter => React.createElement(PressKey, {\n      key: displayLetter.toString(),\n      value: displayLetter,\n      onClick: e => this.changeResult(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(DisplayScreen, {\n      value: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), pressKeyItems);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spandan/projects-practice/calculator/src/App.js"],"names":["React","Component","PressKey","DisplayScreen","App","constructor","changeResult","keyValue","tempResult","state","result","setState","render","displayLetters","pressKeyItems","map","displayLetter","toString","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,YAPc,GAOCC,QAAQ,IAAI;AAEzB,UAAGA,QAAQ,KAAK,IAAhB,EAAqB,CAEpB,CAFD,MAII;AACF,YAAIC,UAAU,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAf,EAAsBH,QAAtB,CAAjB;AACF,aAAKI,QAAL,CAAc;AACZD,UAAAA,MAAM,EAAEF;AADI,SAAd;AAGC;AAEF,KApBa;;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CAAC,GAAD;AADG,KAAb;AAGD;;AAkBDE,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG,CACrB,GADqB,EAChB,GADgB,EACX,GADW,EACN,IADM,EACA,GADA,EACK,GADL,EACU,GADV,EACe,GADf,EACoB,GADpB,EACyB,GADzB,EAC8B,GAD9B,EACmC,GADnC,EACwC,GADxC,EAC6C,GAD7C,EACkD,GADlD,EACuD,GADvD,EAC4D,GAD5D,EACiE,GADjE,EACsE,GADtE,EAC2E,GAD3E,CAAvB;AAIA,UAAMC,aAAa,GAAGD,cAAc,CAACE,GAAf,CAAoBC,aAAD,IACvC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,aAAa,CAACC,QAAd,EAAf;AAAyC,MAAA,KAAK,EAAED,aAAhD;AAA+D,MAAA,OAAO,EAAIE,CAAC,IAAI,KAAKZ,YAAL,CAAkBY,CAAC,CAACC,MAAF,CAASC,KAA3B,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB,CAAtB;AAKA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGI,aAFH,CADF;AAMD;;AAxCyB;;AA4C5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport PressKey from './components/PressKey';\nimport DisplayScreen from './components/DisplayScreen';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      result: ['0']\n    }\n  }\n\n  changeResult = keyValue => {\n\n    if(keyValue === 'AC'){\n\n    }\n\n    else{\n      let tempResult = [...this.state.result,keyValue];\n    this.setState({\n      result: tempResult\n    })\n    }\n    \n  }\n\n\n  render() {\n    const displayLetters = [\n      '(', ')', '%', 'AC', '7', '8', '9', '/', '4', '5', '6', '*', '1', '2', '3', '-', '0', '.', '=', '+'\n    ]\n\n    const pressKeyItems = displayLetters.map((displayLetter) =>\n      <PressKey key={displayLetter.toString()} value={displayLetter} onClick = {e => this.changeResult(e.target.value)}>\n      </PressKey>\n    );\n\n    return (\n      <div>\n        <DisplayScreen value={this.state.result}></DisplayScreen>\n        {pressKeyItems}\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}