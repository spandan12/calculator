{"ast":null,"code":"const NUMBERS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\n\nclass PostfixEquation {\n  constructor(infix) {\n    this.infix = infix;\n    this.priority0 = ['+', '-'];\n    this.priority1 = ['*', '/'];\n    this.priority2 = ['%'];\n    this.tempStack = [];\n    this.outputStack = [];\n  }\n\n  covertToEquation() {\n    const variab = this.infix.map(individualElem => {\n      if (NUMBERS.includes(individualElem)) {\n        this.outputStack.push(individualElem);\n      }\n    });\n  }\n\n}\n\nexport default PostfixEquation;","map":{"version":3,"sources":["/home/spandan/projects-practice/calculator/src/implementation/postfixEquation.js"],"names":["NUMBERS","PostfixEquation","constructor","infix","priority0","priority1","priority2","tempStack","outputStack","covertToEquation","variab","map","individualElem","includes","push"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CACZ,GADY,EACR,GADQ,EACJ,GADI,EACA,GADA,EACI,GADJ,EACQ,GADR,EACY,GADZ,EACgB,GADhB,EACoB,GADpB,EACwB,GADxB,CAAhB;;AAGA,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,SAAL,GAAiB,CACb,GADa,EACR,GADQ,CAAjB;AAGA,SAAKC,SAAL,GAAiB,CACb,GADa,EACR,GADQ,CAAjB;AAGA,SAAKC,SAAL,GAAiB,CACb,GADa,CAAjB;AAGA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACH;;AAEDC,EAAAA,gBAAgB,GAAE;AACd,UAAMC,MAAM,GAAG,KAAKP,KAAL,CAAWQ,GAAX,CAAgBC,cAAD,IAC9B;AACI,UAAGZ,OAAO,CAACa,QAAR,CAAiBD,cAAjB,CAAH,EAAoC;AAChC,aAAKJ,WAAL,CAAiBM,IAAjB,CAAsBF,cAAtB;AACH;AACJ,KALc,CAAf;AAQH;;AAzBiB;;AA4BtB,eAAeX,eAAf","sourcesContent":["const NUMBERS = [\n    '1','2','3','4','5','6','7','8','9','0'\n];\nclass PostfixEquation {\n    constructor(infix) {\n        this.infix = infix;\n        this.priority0 = [\n            '+', '-'\n        ]\n        this.priority1 = [\n            '*', '/'\n        ]\n        this.priority2 = [\n            '%'\n        ]\n        this.tempStack = [];\n        this.outputStack = [];\n    }\n\n    covertToEquation(){\n        const variab = this.infix.map((individualElem) =>\n        {\n            if(NUMBERS.includes(individualElem)){\n                this.outputStack.push(individualElem);\n            }\n        }\n        \n    );\n    }\n}\n\nexport default PostfixEquation;"]},"metadata":{},"sourceType":"module"}