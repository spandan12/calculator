{"ast":null,"code":"var _jsxFileName = \"/home/spandan/projects-practice/calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport PressKey from './components/PressKey';\nimport DisplayScreen from './components/DisplayScreen';\nimport DISPLAYLETTERS from './constants';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.changeResult = keyValue => {\n      let tempResult = [];\n      let compareResult = [...this.state.result];\n      console.log(compareResult);\n\n      if (keyValue === 'AC') {\n        tempResult = ['0'];\n      } else if (compareResult.includes(keyValue)) {\n        tempResult = [...this.state.result];\n      } else {\n        tempResult = [...this.state.result, keyValue];\n      }\n\n      this.setState({\n        result: tempResult\n      });\n    };\n\n    this.state = {\n      result: ['0']\n    };\n  }\n\n  render() {\n    const pressKeyItems = DISPLAYLETTERS.map(displayLetter => React.createElement(PressKey, {\n      key: displayLetter.toString(),\n      value: displayLetter,\n      onClick: e => this.changeResult(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(DisplayScreen, {\n      value: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), pressKeyItems);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spandan/projects-practice/calculator/src/App.js"],"names":["React","Component","PressKey","DisplayScreen","DISPLAYLETTERS","App","constructor","changeResult","keyValue","tempResult","compareResult","state","result","console","log","includes","setState","render","pressKeyItems","map","displayLetter","toString","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,OAAOC,cAAP,MAA2B,aAA3B;;AACA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,YAPc,GAOCC,QAAQ,IAAI;AACzB,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,aAAa,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAf,CAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;;AAGA,UAAIF,QAAQ,KAAK,IAAjB,EAAuB;AACrBC,QAAAA,UAAU,GAAG,CAAC,GAAD,CAAb;AACD,OAFD,MAGK,IAAGC,aAAa,CAACK,QAAd,CAAuBP,QAAvB,CAAH,EAAoC;AACvCC,QAAAA,UAAU,GAAG,CAAC,GAAG,KAAKE,KAAL,CAAWC,MAAf,CAAb;AACD,OAFI,MAKA;AACHH,QAAAA,UAAU,GAAG,CAAC,GAAG,KAAKE,KAAL,CAAWC,MAAf,EAAuBJ,QAAvB,CAAb;AAED;;AACD,WAAKQ,QAAL,CAAc;AACZJ,QAAAA,MAAM,EAAEH;AADI,OAAd;AAID,KA7Ba;;AAEZ,SAAKE,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,CAAC,GAAD;AADG,KAAb;AAGD;;AA2BDK,EAAAA,MAAM,GAAG;AAEP,UAAMC,aAAa,GAAGd,cAAc,CAACe,GAAf,CAAoBC,aAAD,IACvC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,aAAa,CAACC,QAAd,EAAf;AAAyC,MAAA,KAAK,EAAED,aAAhD;AAA+D,MAAA,OAAO,EAAEE,CAAC,IAAI,KAAKf,YAAL,CAAkBe,CAAC,CAACC,MAAF,CAASC,KAA3B,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB,CAAtB;AAKA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGM,aAFH,CADF;AAMD;;AA9CyB;;AAkD5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport PressKey from './components/PressKey';\nimport DisplayScreen from './components/DisplayScreen';\n\nimport DISPLAYLETTERS from './constants';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      result: ['0']\n    }\n  }\n\n  changeResult = keyValue => {\n    let tempResult = [];\n    let compareResult = [...this.state.result];\n    console.log(compareResult);\n    \n    \n    if (keyValue === 'AC') {\n      tempResult = ['0'];\n    }\n    else if(compareResult.includes(keyValue)){\n      tempResult = [...this.state.result];\n    }\n\n\n    else {\n      tempResult = [...this.state.result, keyValue];\n      \n    }\n    this.setState({\n      result: tempResult\n    })\n\n  }\n\n\n  render() {\n   \n    const pressKeyItems = DISPLAYLETTERS.map((displayLetter) =>\n      <PressKey key={displayLetter.toString()} value={displayLetter} onClick={e => this.changeResult(e.target.value)}>\n      </PressKey>\n    );\n\n    return (\n      <div>\n        <DisplayScreen value={this.state.result}></DisplayScreen>\n        {pressKeyItems}\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}