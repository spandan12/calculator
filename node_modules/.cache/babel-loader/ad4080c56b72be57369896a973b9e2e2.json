{"ast":null,"code":"var _jsxFileName = \"/home/spandan/projects-practice/calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport PostFixEquation from './implementation/postfixEquation';\nimport calculateExpression from './implementation/calculate';\nimport PressKey from './components/PressKey/PressKey';\nimport DisplayScreen from './components/DisplayScreen/DisplayScreen';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.changeResult = keyValue => {\n      const notDuplicate = ['%', '/', '*', '-', '.', '=', '+'];\n      let tempResult = [];\n\n      if (output == true) {\n        let compareResult = ['0'];\n        this.setState({\n          output: false\n        });\n      } else {\n        let compareResult = [...this.state.result];\n      }\n\n      let length = compareResult.length;\n      let lastElement = compareResult[length - 1];\n\n      if (lastElement === '0' && length == 1) {\n        this.state.result.pop();\n      }\n\n      if (keyValue === 'AC') {\n        tempResult = ['0'];\n      } else if (notDuplicate.includes(keyValue) && notDuplicate.includes(lastElement)) {\n        tempResult = [...this.state.result];\n      } else if (keyValue === '=') {\n        let equation = new PostFixEquation(this.state.result);\n        let postfix = equation.covertToEquation(); // console.log(postfix);\n\n        let calculatedResult = calculateExpression(postfix);\n        tempResult = calculatedResult;\n        this.setState({\n          output: true\n        });\n      } else {\n        tempResult = [...this.state.result, keyValue];\n      }\n\n      this.setState({\n        result: tempResult\n      });\n    };\n\n    this.state = {\n      result: ['0'],\n      output: false\n    };\n  }\n\n  render() {\n    const displayLetters = ['(', ')', '%', 'AC', '7', '8', '9', '/', '4', '5', '6', '*', '1', '2', '3', '-', '0', '.', '=', '+'];\n    const pressKeyItems = displayLetters.map(displayLetter => React.createElement(PressKey, {\n      className: \"press-key\",\n      key: displayLetter.toString(),\n      value: displayLetter,\n      onClick: e => this.changeResult(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"main-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(DisplayScreen, {\n      value: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), pressKeyItems);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spandan/projects-practice/calculator/src/App.js"],"names":["React","Component","PostFixEquation","calculateExpression","PressKey","DisplayScreen","App","constructor","changeResult","keyValue","notDuplicate","tempResult","output","compareResult","setState","state","result","length","lastElement","pop","includes","equation","postfix","covertToEquation","calculatedResult","render","displayLetters","pressKeyItems","map","displayLetter","toString","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport PostFixEquation from './implementation/postfixEquation';\nimport calculateExpression from './implementation/calculate';\n\nimport PressKey from './components/PressKey/PressKey';\nimport DisplayScreen from './components/DisplayScreen/DisplayScreen';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      result: ['0'],\n      output: false\n    }\n  }\n\n\n\n  changeResult = keyValue => {\n    const notDuplicate = [\n      '%', '/', '*', '-', '.', '=', '+'\n    ];\n    let tempResult = [];\n    if(output == true){\n      let compareResult = ['0'];\n      this.setState({\n        output: false\n      })\n    }\n    else{\n      let compareResult = [...this.state.result];\n    }\n    \n    \n    let length = compareResult.length;\n    let lastElement = compareResult[length - 1]\n\n    if(lastElement === '0' && length == 1){\n      this.state.result.pop();\n    }\n\n    if (keyValue === 'AC') {\n      tempResult = ['0'];\n    }\n    else if (notDuplicate.includes(keyValue) && notDuplicate.includes(lastElement)) {\n      tempResult = [...this.state.result];\n    }\n    \n    else if(keyValue === '='){\n      let equation = new PostFixEquation(this.state.result);\n      let postfix = equation.covertToEquation();\n      // console.log(postfix);\n      let calculatedResult = calculateExpression(postfix);\n      tempResult = calculatedResult;\n      this.setState({\n        output: true\n      })\n    }\n\n    else {\n      tempResult = [...this.state.result, keyValue];\n\n    }\n\n    this.setState({\n      result: tempResult\n    })\n\n  }\n\n\n  render() {\n    const displayLetters = [\n      '(', ')', '%', 'AC', '7', '8', '9', '/', '4', '5', '6', '*', '1', '2', '3', '-', '0', '.', '=', '+'\n    ]\n\n    const pressKeyItems = displayLetters.map((displayLetter) =>\n      <PressKey className=\"press-key\" key={displayLetter.toString()} value={displayLetter} onClick={e => this.changeResult(e.target.value)}>\n      </PressKey>\n    );\n\n    return (\n      <div className=\"main-wrapper\">\n        <DisplayScreen value={this.state.result}></DisplayScreen>\n        {pressKeyItems}\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}