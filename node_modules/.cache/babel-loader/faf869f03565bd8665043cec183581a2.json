{"ast":null,"code":"var _jsxFileName = \"/home/spandan/projects-practice/calculatorApp/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport PostFixEquation from \"./implementation/postfixEquation\";\nimport calculateExpression from \"./implementation/calculate\";\nimport PressKey from \"./components/PressKey/PressKey\";\nimport DisplayScreen from \"./components/DisplayScreen/DisplayScreen\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.changeResult = keyValue => {\n      const notDuplicate = [\"%\", \"/\", \"*\", \"-\", \".\", \"=\", \"+\"];\n      let tempResult = [];\n      let compareResult = [];\n      let lastElement = null;\n      let length = null;\n\n      if (this.state.output === true) {\n        compareResult = [\"0\"];\n        this.setState({\n          output: false\n        });\n        length = compareResult.length;\n        lastElement = compareResult[length - 1];\n      } else {\n        compareResult = [...this.state.result];\n        length = compareResult.length;\n        lastElement = compareResult[length - 1];\n\n        if (lastElement === \"0\" && length == 1) {\n          this.state.result.pop();\n        }\n      }\n\n      if (keyValue === \"AC\" && this.output === false) {\n        tempResult = [\"0\"];\n      } else if (notDuplicate.includes(keyValue) && notDuplicate.includes(lastElement) && this.output === false) {\n        tempResult = [...this.state.result];\n      } else if (keyValue === \"=\" && this.output === false) {\n        let equation = new PostFixEquation(this.state.result);\n        let postfix = equation.covertToEquation();\n        let calculatedResult = calculateExpression(postfix);\n        tempResult = calculatedResult;\n        this.setState({\n          output: true\n        });\n      } else if (this.output === false) {\n        tempResult = [...this.state.result, keyValue];\n      }\n\n      this.setState({\n        result: tempResult\n      });\n    };\n\n    this.state = {\n      result: [\"0\"],\n      output: false\n    };\n  }\n\n  render() {\n    const displayLetters = [\"(\", \")\", \"%\", \"AC\", \"7\", \"8\", \"9\", \"/\", \"4\", \"5\", \"6\", \"*\", \"1\", \"2\", \"3\", \"-\", \"0\", \".\", \"=\", \"+\"];\n    const pressKeyItems = displayLetters.map(displayLetter => React.createElement(PressKey, {\n      className: \"press-key\",\n      key: displayLetter.toString(),\n      value: displayLetter,\n      onClick: e => this.changeResult(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"main-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(DisplayScreen, {\n      value: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), pressKeyItems);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/spandan/projects-practice/calculatorApp/src/App.js"],"names":["React","Component","PostFixEquation","calculateExpression","PressKey","DisplayScreen","App","constructor","changeResult","keyValue","notDuplicate","tempResult","compareResult","lastElement","length","state","output","setState","result","pop","includes","equation","postfix","covertToEquation","calculatedResult","render","displayLetters","pressKeyItems","map","displayLetter","toString","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport PostFixEquation from \"./implementation/postfixEquation\";\nimport calculateExpression from \"./implementation/calculate\";\n\nimport PressKey from \"./components/PressKey/PressKey\";\nimport DisplayScreen from \"./components/DisplayScreen/DisplayScreen\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      result: [\"0\"],\n      output: false\n    };\n  }\n\n  changeResult = keyValue => {\n    const notDuplicate = [\"%\", \"/\", \"*\", \"-\", \".\", \"=\", \"+\"];\n    let tempResult = [];\n    let compareResult = [];\n    let lastElement = null;\n    let length = null;\n    if (this.state.output === true) {\n      compareResult = [\"0\"];\n      this.setState({\n        output: false\n      });\n      length = compareResult.length;\n      lastElement = compareResult[length - 1];\n    } else {\n      compareResult = [...this.state.result];\n      length = compareResult.length;\n      lastElement = compareResult[length - 1];\n      if (lastElement === \"0\" && length == 1) {\n        this.state.result.pop();\n      }\n    }\n\n    if (keyValue === \"AC\" && this.output === false) {\n      tempResult = [\"0\"];\n    } else if (\n      notDuplicate.includes(keyValue) &&\n      notDuplicate.includes(lastElement) &&\n      this.output === false\n    ) {\n      tempResult = [...this.state.result];\n    } else if (keyValue === \"=\" && this.output === false) {\n      let equation = new PostFixEquation(this.state.result);\n      let postfix = equation.covertToEquation();\n      let calculatedResult = calculateExpression(postfix);\n      tempResult = calculatedResult;\n      this.setState({\n        output: true\n      });\n    } else if (this.output === false) {\n      tempResult = [...this.state.result, keyValue];\n    }\n\n    this.setState({\n      result: tempResult\n    });\n  };\n\n  render() {\n    const displayLetters = [\n      \"(\",\n      \")\",\n      \"%\",\n      \"AC\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"/\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"*\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"-\",\n      \"0\",\n      \".\",\n      \"=\",\n      \"+\"\n    ];\n\n    const pressKeyItems = displayLetters.map(displayLetter => (\n      <PressKey\n        className=\"press-key\"\n        key={displayLetter.toString()}\n        value={displayLetter}\n        onClick={e => this.changeResult(e.target.value)}\n      ></PressKey>\n    ));\n\n    return (\n      <div className=\"main-wrapper\">\n        <DisplayScreen value={this.state.result}></DisplayScreen>\n        {pressKeyItems}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}